C51 COMPILER V9.00   LCD12864                                                              09/22/2016 20:02:18 PAGE 1   


C51 COMPILER V9.00, COMPILATION OF MODULE LCD12864
OBJECT MODULE PLACED IN ..\output\lcd12864.obj
COMPILER INVOKED BY: C:\Keil_v4\C51\BIN\C51.EXE ..\src\lcd12864.c LARGE BROWSE INCDIR(..\src;..\..\9.22最终完成;..\user;
                    -..\object;..\output) DEBUG OBJECTEXTEND PRINT(.\lcd12864.lst) OBJECT(..\output\lcd12864.obj)

line level    source

   1          #include "config.h"
   2          sbit RS  = P0^7;
   3          sbit RW  = P0^6;
   4          sbit E   = P0^5;
   5          sbit PSB = P0^4;
   6          sbit RES = P0^3;
   7          /*********************************
   8          检测lcd的忙碌状态
   9          **********************************/
  10          unsigned char Lcd_CheckBusy(void)
  11          {
  12   1          unsigned char Busy;
  13   1              LcdData=0xff;
  14   1          RS=0;
  15   1          RW=1;
  16   1          E=1;
  17   1          _nop_(); 
  18   1          Busy=LcdData&0x80;
  19   1          E=0;
  20   1          return Busy;
  21   1      }
  22          
  23          /*********************************
  24          向LCD写入字节数据
  25          **********************************/
  26          void Lcd_WriteData(unsigned char Data)
  27          {  
  28   1              while(Lcd_CheckBusy());
  29   1              RS=1;
  30   1              RW=0;
  31   1              E=0;
  32   1              _nop_();  
  33   1              _nop_(); 
  34   1              LcdData=Data;
  35   1              E=1;
  36   1              _nop_();
  37   1              _nop_();
  38   1              E=0;
  39   1      }
  40          
  41          /***********************************
  42          从LCD中读出数据
  43          ************************************/
  44          unsigned char Lcd_ReadData(void)
  45          {
  46   1              unsigned char Temp;
  47   1              while(Lcd_CheckBusy());
  48   1              LcdData=0xff;
  49   1              RS=1;
  50   1              RW=1;
  51   1              E=1;
  52   1              _nop_();
  53   1              Temp=LcdData;
  54   1              E=0;
C51 COMPILER V9.00   LCD12864                                                              09/22/2016 20:02:18 PAGE 2   

  55   1              return Temp;
  56   1      }
  57          
  58          /*************************************
  59          想LCD中写入指令代码
  60          **************************************/
  61          void Lcd_WriteCmd(unsigned char CmdCode)
  62          {  
  63   1              while(Lcd_CheckBusy());
  64   1              RS=0;
  65   1              RW=0;
  66   1              E=0;
  67   1              _nop_();  
  68   1              _nop_();
  69   1              LcdData=CmdCode;
  70   1              _nop_(); 
  71   1              _nop_();
  72   1              E=1;
  73   1              _nop_();  
  74   1              _nop_();
  75   1              E=0;
  76   1      }
  77          
  78          
  79          /*************************************
  80          向LCD指定起始位置写入一个字符串
  81          *************************************/
  82          void Lcd_WriteStr(unsigned char x,unsigned char y,unsigned char *Str)
  83          {
  84   1              if((y>3)||(x>7))
  85   1                      return;//如果指定位置不在显示区域内，则不做任何写入直接返回
  86   1              EA=0;
  87   1              switch(y)
  88   1              {
  89   2                      case 0:
  90   2                                      Lcd_WriteCmd(0x80+x);
  91   2                                      break;
  92   2                      case 1:
  93   2                                      Lcd_WriteCmd(0x90+x);
  94   2                                      break;                          
  95   2                      case 2:
  96   2                                      Lcd_WriteCmd(0x88+x);
  97   2                                      break;
  98   2                      case 3:
  99   2                                      Lcd_WriteCmd(0x98+x);
 100   2                                      break;
 101   2              }
 102   1              while(*Str>0)
 103   1              {  
 104   2                      Lcd_WriteData(*Str);
 105   2                      Str++;     
 106   2              }
 107   1              EA=1;
 108   1      }
 109          
 110          /**************************************
 111          为加速逻辑运算而设置的掩码表，这是以牺牲空间而换取时间的办法
 112          ***************************************/
 113          code unsigned int MaskTab[]={0x0001,0x0002,0x0004,0x0008,0x0010,0x0020,0x0040,0x0080,
 114                                                                   0x0100,0x0200,0x0400,0x0800,0x1000,0x2000,0x4000,0x8000};
 115          /***************************************
 116          向LCD指定坐标写入一个象素,象素颜色有两种，0代表白（无显示），1代表黑（有显示）
C51 COMPILER V9.00   LCD12864                                                              09/22/2016 20:02:18 PAGE 3   

 117          ****************************************/
 118          void Lcd_PutPixel(unsigned char x,unsigned char y,unsigned char Color)
 119          {
 120   1              unsigned char z,w;
 121   1              unsigned int Temp;
 122   1              if(x>=128||y>=64)
 123   1                      return;
 124   1              Color=Color%2;
 125   1              w=15-x%16;//确定对这个字的第多少位进行操作
 126   1              x=x/16;//确定为一行上的第几字
 127   1      
 128   1              if(y<32) //如果为上页
 129   1                      z=0x80;
 130   1              else     //否则如果为下页
 131   1                      z=0x88;
 132   1      
 133   1              y=y%32;
 134   1              EA=0;
 135   1              Lcd_WriteCmd(0x36);
 136   1              Lcd_WriteCmd(y+0x80);        //行地址
 137   1              Lcd_WriteCmd(x+z);     //列地址 
 138   1              Temp=Lcd_ReadData();//先空读一次
 139   1              Temp=(unsigned int)Lcd_ReadData()<<8;//再读出高8位
 140   1              Temp|=(unsigned int)Lcd_ReadData();//再读出低8位
 141   1              EA=1;
 142   1              if(Color==1) //如果写入颜色为1
 143   1                      Temp|=MaskTab[w];//在此处查表实现加速
 144   1              else         //如果写入颜色为0
 145   1                      Temp&=~MaskTab[w];//在此处查表实现加速
 146   1              EA=0;
 147   1              Lcd_WriteCmd(y+0x80);        //行地址
 148   1              Lcd_WriteCmd(x+z);     //列地址
 149   1          Lcd_WriteData(Temp>>8);//先写入高8位，再写入低8位
 150   1          Lcd_WriteData(Temp&0x00ff);
 151   1              Lcd_WriteCmd(0x30);
 152   1              EA=1;
 153   1      }
 154          
 155          
 156          /***************************************
 157          向LCD指定位置画一条长度为Length的指定颜色的水平线
 158          ****************************************/
 159          void Lcd_HoriLine(unsigned char x,unsigned char y,unsigned char Length,unsigned char Color)
 160          {
 161   1              unsigned char i;
 162   1              if(Length==0)
 163   1                      return;
 164   1              for(i=0;i<Length;i++)
 165   1              {
 166   2                      Lcd_PutPixel(x+i,y,Color);
 167   2              }
 168   1      }
 169          
 170          /***************************************
 171          向LCD指定位置画一条长度为Length的指定颜色的垂直线
 172          ****************************************/
 173          void Lcd_VertLine(unsigned char x,unsigned char y,unsigned char Length,unsigned char Color)
 174          {
 175   1              unsigned char i;
 176   1              if(Length==0)
 177   1                      return;
 178   1              for(i=0;i<Length;i++)
C51 COMPILER V9.00   LCD12864                                                              09/22/2016 20:02:18 PAGE 4   

 179   1              {
 180   2                      Lcd_PutPixel(x,y+i,Color);
 181   2              }
 182   1      }
 183          
 184          
 185          
 186          
 187          void Lcd_Rectangle(unsigned char x0,unsigned char y0,unsigned char x1,unsigned char y1,unsigned char Color
             -)
 188          {
 189   1          unsigned char Temp;
 190   1              if(x0>x1)
 191   1              {
 192   2                      Temp=x0;
 193   2                      x0=x1;
 194   2                      x1=Temp;
 195   2              }       
 196   1              if(y0>y1)
 197   1              {
 198   2                      Temp=y0;
 199   2                      y0=y1;
 200   2                      y1=Temp;
 201   2              }
 202   1              Lcd_VertLine(x0,y0,y1-y0+1,Color);
 203   1              Lcd_VertLine(x1,y0,y1-y0+1,Color);
 204   1              Lcd_HoriLine(x0,y0,x1-x0+1,Color);
 205   1              Lcd_HoriLine(x0,y1,x1-x0+1,Color);      
 206   1      }
 207          
 208          
 209          
 210          
 211          
 212          /*****************************************
 213          清除Lcd全屏，如果清除模式Mode为0，则为全屏清除为颜色0（无任何显示）
 214          否则为全屏清除为颜色1(全屏填充显示)
 215          ******************************************/
 216          void Lcd_Clear(unsigned char Mode)
 217          {
 218   1              unsigned char x,y,ii;
 219   1              unsigned char Temp;
 220   1              if(Mode%2==0)
 221   1                      Temp=0x00;
 222   1              else
 223   1                      Temp=0xff;
 224   1              Lcd_WriteCmd(0x36);//扩充指令 绘图显示
 225   1              for(ii=0;ii<9;ii+=8)   
 226   1                      for(y=0;y<0x20;y++)     
 227   1                              for(x=0;x<8;x++)
 228   1                              {       
 229   2                                      EA=0;
 230   2                                      Lcd_WriteCmd(y+0x80);        //行地址
 231   2                                      Lcd_WriteCmd(x+0x80+ii);     //列地址     
 232   2                                      Lcd_WriteData(Temp); //写数据 D15－D8 
 233   2                                      Lcd_WriteData(Temp); //写数据 D7－D0 
 234   2                                      EA=1;
 235   2                              }
 236   1              Lcd_WriteCmd(0x30);
 237   1      }
 238          
 239          /****************************************
C51 COMPILER V9.00   LCD12864                                                              09/22/2016 20:02:18 PAGE 5   

 240          LCD初始化
 241          *****************************************/
 242          void Lcd_Reset()
 243          {  
 244   1              PSB=1;
 245   1              Lcd_WriteCmd(0x30);       //选择基本指令集
 246   1              Lcd_WriteCmd(0x0c);       //开显示(无游标、不反白)
 247   1              Lcd_WriteCmd(0x01);       //清除显示，并且设定地址指针为00H
 248   1              Lcd_WriteCmd(0x06);       //指定在资料的读取及写入时，设定游标的移动方向及指定显示的移位
 249   1      }
 250          
 251           void ShiZi_Display(unsigned char x,unsigned char y, uchar color)
 252          {
 253   1                Lcd_HoriLine(x-1,y,3,color);
 254   1                Lcd_VertLine(x,y-1,3,color);
 255   1      }


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =    776    ----
   CONSTANT SIZE    =     32    ----
   XDATA SIZE       =   ----      21
   PDATA SIZE       =   ----    ----
   DATA SIZE        =   ----    ----
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
